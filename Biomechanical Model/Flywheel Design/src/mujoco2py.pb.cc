// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mujoco2py.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mujoco2py.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mujoco2py {

namespace {

const ::google::protobuf::Descriptor* mujoco_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  mujoco_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* mujoco_msg_mj_joint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  mujoco_msg_mj_joint_reflection_ = NULL;
const ::google::protobuf::Descriptor* mujoco_msg_mj_act_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  mujoco_msg_mj_act_reflection_ = NULL;
const ::google::protobuf::Descriptor* mujoco_msg_mj_tend_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  mujoco_msg_mj_tend_reflection_ = NULL;
const ::google::protobuf::Descriptor* mujoco_msg_mj_site_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  mujoco_msg_mj_site_reflection_ = NULL;
const ::google::protobuf::Descriptor* general_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  general_msg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mujoco2py_2eproto() {
  protobuf_AddDesc_mujoco2py_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mujoco2py.proto");
  GOOGLE_CHECK(file != NULL);
  mujoco_msg_descriptor_ = file->message_type(0);
  static const int mujoco_msg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg, joint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg, act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg, tend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg, site_),
  };
  mujoco_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      mujoco_msg_descriptor_,
      mujoco_msg::default_instance_,
      mujoco_msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(mujoco_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg, _is_default_instance_));
  mujoco_msg_mj_joint_descriptor_ = mujoco_msg_descriptor_->nested_type(0);
  static const int mujoco_msg_mj_joint_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_joint, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_joint, qpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_joint, force_),
  };
  mujoco_msg_mj_joint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      mujoco_msg_mj_joint_descriptor_,
      mujoco_msg_mj_joint::default_instance_,
      mujoco_msg_mj_joint_offsets_,
      -1,
      -1,
      -1,
      sizeof(mujoco_msg_mj_joint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_joint, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_joint, _is_default_instance_));
  mujoco_msg_mj_act_descriptor_ = mujoco_msg_descriptor_->nested_type(1);
  static const int mujoco_msg_mj_act_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_act, ctrl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_act, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_act, force_),
  };
  mujoco_msg_mj_act_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      mujoco_msg_mj_act_descriptor_,
      mujoco_msg_mj_act::default_instance_,
      mujoco_msg_mj_act_offsets_,
      -1,
      -1,
      -1,
      sizeof(mujoco_msg_mj_act),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_act, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_act, _is_default_instance_));
  mujoco_msg_mj_tend_descriptor_ = mujoco_msg_descriptor_->nested_type(2);
  static const int mujoco_msg_mj_tend_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_tend, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_tend, len_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_tend, len0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_tend, len_dot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_tend, ma_),
  };
  mujoco_msg_mj_tend_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      mujoco_msg_mj_tend_descriptor_,
      mujoco_msg_mj_tend::default_instance_,
      mujoco_msg_mj_tend_offsets_,
      -1,
      -1,
      -1,
      sizeof(mujoco_msg_mj_tend),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_tend, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_tend, _is_default_instance_));
  mujoco_msg_mj_site_descriptor_ = mujoco_msg_descriptor_->nested_type(3);
  static const int mujoco_msg_mj_site_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_site, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_site, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_site, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_site, z_),
  };
  mujoco_msg_mj_site_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      mujoco_msg_mj_site_descriptor_,
      mujoco_msg_mj_site::default_instance_,
      mujoco_msg_mj_site_offsets_,
      -1,
      -1,
      -1,
      sizeof(mujoco_msg_mj_site),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_site, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(mujoco_msg_mj_site, _is_default_instance_));
  general_msg_descriptor_ = file->message_type(1);
  static const int general_msg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(general_msg, instruction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(general_msg, value_),
  };
  general_msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      general_msg_descriptor_,
      general_msg::default_instance_,
      general_msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(general_msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(general_msg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(general_msg, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mujoco2py_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      mujoco_msg_descriptor_, &mujoco_msg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      mujoco_msg_mj_joint_descriptor_, &mujoco_msg_mj_joint::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      mujoco_msg_mj_act_descriptor_, &mujoco_msg_mj_act::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      mujoco_msg_mj_tend_descriptor_, &mujoco_msg_mj_tend::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      mujoco_msg_mj_site_descriptor_, &mujoco_msg_mj_site::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      general_msg_descriptor_, &general_msg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mujoco2py_2eproto() {
  delete mujoco_msg::default_instance_;
  delete mujoco_msg_reflection_;
  delete mujoco_msg_mj_joint::default_instance_;
  delete mujoco_msg_mj_joint_reflection_;
  delete mujoco_msg_mj_act::default_instance_;
  delete mujoco_msg_mj_act_reflection_;
  delete mujoco_msg_mj_tend::default_instance_;
  delete mujoco_msg_mj_tend_reflection_;
  delete mujoco_msg_mj_site::default_instance_;
  delete mujoco_msg_mj_site_reflection_;
  delete general_msg::default_instance_;
  delete general_msg_reflection_;
}

void protobuf_AddDesc_mujoco2py_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017mujoco2py.proto\022\tmujoco2py\"\267\003\n\nmujoco_"
    "msg\022-\n\005joint\030\001 \003(\0132\036.mujoco2py.mujoco_ms"
    "g.mj_joint\022)\n\003act\030\002 \003(\0132\034.mujoco2py.mujo"
    "co_msg.mj_act\022+\n\004tend\030\003 \003(\0132\035.mujoco2py."
    "mujoco_msg.mj_tend\022+\n\004site\030\004 \003(\0132\035.mujoc"
    "o2py.mujoco_msg.mj_site\0325\n\010mj_joint\022\014\n\004n"
    "ame\030\001 \001(\t\022\014\n\004qpos\030\002 \001(\001\022\r\n\005force\030\003 \001(\001\0323"
    "\n\006mj_act\022\014\n\004ctrl\030\001 \001(\001\022\014\n\004name\030\002 \001(\t\022\r\n\005"
    "force\030\003 \001(\001\032O\n\007mj_tend\022\014\n\004name\030\001 \001(\t\022\013\n\003"
    "len\030\002 \001(\001\022\014\n\004len0\030\003 \001(\001\022\017\n\007len_dot\030\004 \001(\001"
    "\022\n\n\002ma\030\005 \001(\001\0328\n\007mj_site\022\014\n\004name\030\001 \001(\t\022\t\n"
    "\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\t\n\001z\030\004 \001(\001\"1\n\013genera"
    "l_msg\022\023\n\013instruction\030\001 \001(\t\022\r\n\005value\030\002 \003("
    "\001b\006proto3", 529);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mujoco2py.proto", &protobuf_RegisterTypes);
  mujoco_msg::default_instance_ = new mujoco_msg();
  mujoco_msg_mj_joint::default_instance_ = new mujoco_msg_mj_joint();
  mujoco_msg_mj_act::default_instance_ = new mujoco_msg_mj_act();
  mujoco_msg_mj_tend::default_instance_ = new mujoco_msg_mj_tend();
  mujoco_msg_mj_site::default_instance_ = new mujoco_msg_mj_site();
  general_msg::default_instance_ = new general_msg();
  mujoco_msg::default_instance_->InitAsDefaultInstance();
  mujoco_msg_mj_joint::default_instance_->InitAsDefaultInstance();
  mujoco_msg_mj_act::default_instance_->InitAsDefaultInstance();
  mujoco_msg_mj_tend::default_instance_->InitAsDefaultInstance();
  mujoco_msg_mj_site::default_instance_->InitAsDefaultInstance();
  general_msg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mujoco2py_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mujoco2py_2eproto {
  StaticDescriptorInitializer_mujoco2py_2eproto() {
    protobuf_AddDesc_mujoco2py_2eproto();
  }
} static_descriptor_initializer_mujoco2py_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mujoco_msg_mj_joint::kNameFieldNumber;
const int mujoco_msg_mj_joint::kQposFieldNumber;
const int mujoco_msg_mj_joint::kForceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mujoco_msg_mj_joint::mujoco_msg_mj_joint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mujoco2py.mujoco_msg.mj_joint)
}

void mujoco_msg_mj_joint::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

mujoco_msg_mj_joint::mujoco_msg_mj_joint(const mujoco_msg_mj_joint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mujoco2py.mujoco_msg.mj_joint)
}

void mujoco_msg_mj_joint::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qpos_ = 0;
  force_ = 0;
}

mujoco_msg_mj_joint::~mujoco_msg_mj_joint() {
  // @@protoc_insertion_point(destructor:mujoco2py.mujoco_msg.mj_joint)
  SharedDtor();
}

void mujoco_msg_mj_joint::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void mujoco_msg_mj_joint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mujoco_msg_mj_joint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mujoco_msg_mj_joint_descriptor_;
}

const mujoco_msg_mj_joint& mujoco_msg_mj_joint::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mujoco2py_2eproto();
  return *default_instance_;
}

mujoco_msg_mj_joint* mujoco_msg_mj_joint::default_instance_ = NULL;

mujoco_msg_mj_joint* mujoco_msg_mj_joint::New(::google::protobuf::Arena* arena) const {
  mujoco_msg_mj_joint* n = new mujoco_msg_mj_joint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mujoco_msg_mj_joint::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<mujoco_msg_mj_joint*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(qpos_, force_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool mujoco_msg_mj_joint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mujoco2py.mujoco_msg.mj_joint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mujoco2py.mujoco_msg.mj_joint.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_qpos;
        break;
      }

      // optional double qpos = 2;
      case 2: {
        if (tag == 17) {
         parse_qpos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &qpos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_force;
        break;
      }

      // optional double force = 3;
      case 3: {
        if (tag == 25) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &force_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mujoco2py.mujoco_msg.mj_joint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mujoco2py.mujoco_msg.mj_joint)
  return false;
#undef DO_
}

void mujoco_msg_mj_joint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mujoco2py.mujoco_msg.mj_joint)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.mujoco_msg.mj_joint.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional double qpos = 2;
  if (this->qpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->qpos(), output);
  }

  // optional double force = 3;
  if (this->force() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->force(), output);
  }

  // @@protoc_insertion_point(serialize_end:mujoco2py.mujoco_msg.mj_joint)
}

::google::protobuf::uint8* mujoco_msg_mj_joint::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mujoco2py.mujoco_msg.mj_joint)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.mujoco_msg.mj_joint.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional double qpos = 2;
  if (this->qpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->qpos(), target);
  }

  // optional double force = 3;
  if (this->force() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->force(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mujoco2py.mujoco_msg.mj_joint)
  return target;
}

int mujoco_msg_mj_joint::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional double qpos = 2;
  if (this->qpos() != 0) {
    total_size += 1 + 8;
  }

  // optional double force = 3;
  if (this->force() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mujoco_msg_mj_joint::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const mujoco_msg_mj_joint* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const mujoco_msg_mj_joint>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void mujoco_msg_mj_joint::MergeFrom(const mujoco_msg_mj_joint& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.qpos() != 0) {
    set_qpos(from.qpos());
  }
  if (from.force() != 0) {
    set_force(from.force());
  }
}

void mujoco_msg_mj_joint::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mujoco_msg_mj_joint::CopyFrom(const mujoco_msg_mj_joint& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mujoco_msg_mj_joint::IsInitialized() const {

  return true;
}

void mujoco_msg_mj_joint::Swap(mujoco_msg_mj_joint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mujoco_msg_mj_joint::InternalSwap(mujoco_msg_mj_joint* other) {
  name_.Swap(&other->name_);
  std::swap(qpos_, other->qpos_);
  std::swap(force_, other->force_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mujoco_msg_mj_joint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = mujoco_msg_mj_joint_descriptor_;
  metadata.reflection = mujoco_msg_mj_joint_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mujoco_msg_mj_act::kCtrlFieldNumber;
const int mujoco_msg_mj_act::kNameFieldNumber;
const int mujoco_msg_mj_act::kForceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mujoco_msg_mj_act::mujoco_msg_mj_act()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mujoco2py.mujoco_msg.mj_act)
}

void mujoco_msg_mj_act::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

mujoco_msg_mj_act::mujoco_msg_mj_act(const mujoco_msg_mj_act& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mujoco2py.mujoco_msg.mj_act)
}

void mujoco_msg_mj_act::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ctrl_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  force_ = 0;
}

mujoco_msg_mj_act::~mujoco_msg_mj_act() {
  // @@protoc_insertion_point(destructor:mujoco2py.mujoco_msg.mj_act)
  SharedDtor();
}

void mujoco_msg_mj_act::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void mujoco_msg_mj_act::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mujoco_msg_mj_act::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mujoco_msg_mj_act_descriptor_;
}

const mujoco_msg_mj_act& mujoco_msg_mj_act::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mujoco2py_2eproto();
  return *default_instance_;
}

mujoco_msg_mj_act* mujoco_msg_mj_act::default_instance_ = NULL;

mujoco_msg_mj_act* mujoco_msg_mj_act::New(::google::protobuf::Arena* arena) const {
  mujoco_msg_mj_act* n = new mujoco_msg_mj_act;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mujoco_msg_mj_act::Clear() {
  ctrl_ = 0;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  force_ = 0;
}

bool mujoco_msg_mj_act::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mujoco2py.mujoco_msg.mj_act)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double ctrl = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ctrl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mujoco2py.mujoco_msg.mj_act.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_force;
        break;
      }

      // optional double force = 3;
      case 3: {
        if (tag == 25) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &force_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mujoco2py.mujoco_msg.mj_act)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mujoco2py.mujoco_msg.mj_act)
  return false;
#undef DO_
}

void mujoco_msg_mj_act::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mujoco2py.mujoco_msg.mj_act)
  // optional double ctrl = 1;
  if (this->ctrl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->ctrl(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.mujoco_msg.mj_act.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional double force = 3;
  if (this->force() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->force(), output);
  }

  // @@protoc_insertion_point(serialize_end:mujoco2py.mujoco_msg.mj_act)
}

::google::protobuf::uint8* mujoco_msg_mj_act::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mujoco2py.mujoco_msg.mj_act)
  // optional double ctrl = 1;
  if (this->ctrl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->ctrl(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.mujoco_msg.mj_act.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional double force = 3;
  if (this->force() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->force(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mujoco2py.mujoco_msg.mj_act)
  return target;
}

int mujoco_msg_mj_act::ByteSize() const {
  int total_size = 0;

  // optional double ctrl = 1;
  if (this->ctrl() != 0) {
    total_size += 1 + 8;
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional double force = 3;
  if (this->force() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mujoco_msg_mj_act::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const mujoco_msg_mj_act* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const mujoco_msg_mj_act>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void mujoco_msg_mj_act::MergeFrom(const mujoco_msg_mj_act& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.ctrl() != 0) {
    set_ctrl(from.ctrl());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.force() != 0) {
    set_force(from.force());
  }
}

void mujoco_msg_mj_act::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mujoco_msg_mj_act::CopyFrom(const mujoco_msg_mj_act& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mujoco_msg_mj_act::IsInitialized() const {

  return true;
}

void mujoco_msg_mj_act::Swap(mujoco_msg_mj_act* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mujoco_msg_mj_act::InternalSwap(mujoco_msg_mj_act* other) {
  std::swap(ctrl_, other->ctrl_);
  name_.Swap(&other->name_);
  std::swap(force_, other->force_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mujoco_msg_mj_act::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = mujoco_msg_mj_act_descriptor_;
  metadata.reflection = mujoco_msg_mj_act_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mujoco_msg_mj_tend::kNameFieldNumber;
const int mujoco_msg_mj_tend::kLenFieldNumber;
const int mujoco_msg_mj_tend::kLen0FieldNumber;
const int mujoco_msg_mj_tend::kLenDotFieldNumber;
const int mujoco_msg_mj_tend::kMaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mujoco_msg_mj_tend::mujoco_msg_mj_tend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mujoco2py.mujoco_msg.mj_tend)
}

void mujoco_msg_mj_tend::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

mujoco_msg_mj_tend::mujoco_msg_mj_tend(const mujoco_msg_mj_tend& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mujoco2py.mujoco_msg.mj_tend)
}

void mujoco_msg_mj_tend::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  len_ = 0;
  len0_ = 0;
  len_dot_ = 0;
  ma_ = 0;
}

mujoco_msg_mj_tend::~mujoco_msg_mj_tend() {
  // @@protoc_insertion_point(destructor:mujoco2py.mujoco_msg.mj_tend)
  SharedDtor();
}

void mujoco_msg_mj_tend::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void mujoco_msg_mj_tend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mujoco_msg_mj_tend::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mujoco_msg_mj_tend_descriptor_;
}

const mujoco_msg_mj_tend& mujoco_msg_mj_tend::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mujoco2py_2eproto();
  return *default_instance_;
}

mujoco_msg_mj_tend* mujoco_msg_mj_tend::default_instance_ = NULL;

mujoco_msg_mj_tend* mujoco_msg_mj_tend::New(::google::protobuf::Arena* arena) const {
  mujoco_msg_mj_tend* n = new mujoco_msg_mj_tend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mujoco_msg_mj_tend::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<mujoco_msg_mj_tend*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(len_, ma_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool mujoco_msg_mj_tend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mujoco2py.mujoco_msg.mj_tend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mujoco2py.mujoco_msg.mj_tend.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_len;
        break;
      }

      // optional double len = 2;
      case 2: {
        if (tag == 17) {
         parse_len:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &len_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_len0;
        break;
      }

      // optional double len0 = 3;
      case 3: {
        if (tag == 25) {
         parse_len0:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &len0_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_len_dot;
        break;
      }

      // optional double len_dot = 4;
      case 4: {
        if (tag == 33) {
         parse_len_dot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &len_dot_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_ma;
        break;
      }

      // optional double ma = 5;
      case 5: {
        if (tag == 41) {
         parse_ma:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ma_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mujoco2py.mujoco_msg.mj_tend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mujoco2py.mujoco_msg.mj_tend)
  return false;
#undef DO_
}

void mujoco_msg_mj_tend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mujoco2py.mujoco_msg.mj_tend)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.mujoco_msg.mj_tend.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional double len = 2;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->len(), output);
  }

  // optional double len0 = 3;
  if (this->len0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->len0(), output);
  }

  // optional double len_dot = 4;
  if (this->len_dot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->len_dot(), output);
  }

  // optional double ma = 5;
  if (this->ma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->ma(), output);
  }

  // @@protoc_insertion_point(serialize_end:mujoco2py.mujoco_msg.mj_tend)
}

::google::protobuf::uint8* mujoco_msg_mj_tend::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mujoco2py.mujoco_msg.mj_tend)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.mujoco_msg.mj_tend.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional double len = 2;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->len(), target);
  }

  // optional double len0 = 3;
  if (this->len0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->len0(), target);
  }

  // optional double len_dot = 4;
  if (this->len_dot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->len_dot(), target);
  }

  // optional double ma = 5;
  if (this->ma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->ma(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mujoco2py.mujoco_msg.mj_tend)
  return target;
}

int mujoco_msg_mj_tend::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional double len = 2;
  if (this->len() != 0) {
    total_size += 1 + 8;
  }

  // optional double len0 = 3;
  if (this->len0() != 0) {
    total_size += 1 + 8;
  }

  // optional double len_dot = 4;
  if (this->len_dot() != 0) {
    total_size += 1 + 8;
  }

  // optional double ma = 5;
  if (this->ma() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mujoco_msg_mj_tend::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const mujoco_msg_mj_tend* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const mujoco_msg_mj_tend>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void mujoco_msg_mj_tend::MergeFrom(const mujoco_msg_mj_tend& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
  if (from.len0() != 0) {
    set_len0(from.len0());
  }
  if (from.len_dot() != 0) {
    set_len_dot(from.len_dot());
  }
  if (from.ma() != 0) {
    set_ma(from.ma());
  }
}

void mujoco_msg_mj_tend::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mujoco_msg_mj_tend::CopyFrom(const mujoco_msg_mj_tend& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mujoco_msg_mj_tend::IsInitialized() const {

  return true;
}

void mujoco_msg_mj_tend::Swap(mujoco_msg_mj_tend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mujoco_msg_mj_tend::InternalSwap(mujoco_msg_mj_tend* other) {
  name_.Swap(&other->name_);
  std::swap(len_, other->len_);
  std::swap(len0_, other->len0_);
  std::swap(len_dot_, other->len_dot_);
  std::swap(ma_, other->ma_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mujoco_msg_mj_tend::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = mujoco_msg_mj_tend_descriptor_;
  metadata.reflection = mujoco_msg_mj_tend_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mujoco_msg_mj_site::kNameFieldNumber;
const int mujoco_msg_mj_site::kXFieldNumber;
const int mujoco_msg_mj_site::kYFieldNumber;
const int mujoco_msg_mj_site::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mujoco_msg_mj_site::mujoco_msg_mj_site()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mujoco2py.mujoco_msg.mj_site)
}

void mujoco_msg_mj_site::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

mujoco_msg_mj_site::mujoco_msg_mj_site(const mujoco_msg_mj_site& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mujoco2py.mujoco_msg.mj_site)
}

void mujoco_msg_mj_site::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_ = 0;
  y_ = 0;
  z_ = 0;
}

mujoco_msg_mj_site::~mujoco_msg_mj_site() {
  // @@protoc_insertion_point(destructor:mujoco2py.mujoco_msg.mj_site)
  SharedDtor();
}

void mujoco_msg_mj_site::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void mujoco_msg_mj_site::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mujoco_msg_mj_site::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mujoco_msg_mj_site_descriptor_;
}

const mujoco_msg_mj_site& mujoco_msg_mj_site::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mujoco2py_2eproto();
  return *default_instance_;
}

mujoco_msg_mj_site* mujoco_msg_mj_site::default_instance_ = NULL;

mujoco_msg_mj_site* mujoco_msg_mj_site::New(::google::protobuf::Arena* arena) const {
  mujoco_msg_mj_site* n = new mujoco_msg_mj_site;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mujoco_msg_mj_site::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<mujoco_msg_mj_site*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool mujoco_msg_mj_site::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mujoco2py.mujoco_msg.mj_site)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mujoco2py.mujoco_msg.mj_site.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_x;
        break;
      }

      // optional double x = 2;
      case 2: {
        if (tag == 17) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_y;
        break;
      }

      // optional double y = 3;
      case 3: {
        if (tag == 25) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_z;
        break;
      }

      // optional double z = 4;
      case 4: {
        if (tag == 33) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mujoco2py.mujoco_msg.mj_site)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mujoco2py.mujoco_msg.mj_site)
  return false;
#undef DO_
}

void mujoco_msg_mj_site::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mujoco2py.mujoco_msg.mj_site)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.mujoco_msg.mj_site.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional double x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // optional double y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // optional double z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->z(), output);
  }

  // @@protoc_insertion_point(serialize_end:mujoco2py.mujoco_msg.mj_site)
}

::google::protobuf::uint8* mujoco_msg_mj_site::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mujoco2py.mujoco_msg.mj_site)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.mujoco_msg.mj_site.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional double x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // optional double y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // optional double z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mujoco2py.mujoco_msg.mj_site)
  return target;
}

int mujoco_msg_mj_site::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional double x = 2;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // optional double y = 3;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // optional double z = 4;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mujoco_msg_mj_site::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const mujoco_msg_mj_site* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const mujoco_msg_mj_site>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void mujoco_msg_mj_site::MergeFrom(const mujoco_msg_mj_site& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void mujoco_msg_mj_site::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mujoco_msg_mj_site::CopyFrom(const mujoco_msg_mj_site& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mujoco_msg_mj_site::IsInitialized() const {

  return true;
}

void mujoco_msg_mj_site::Swap(mujoco_msg_mj_site* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mujoco_msg_mj_site::InternalSwap(mujoco_msg_mj_site* other) {
  name_.Swap(&other->name_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mujoco_msg_mj_site::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = mujoco_msg_mj_site_descriptor_;
  metadata.reflection = mujoco_msg_mj_site_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mujoco_msg::kJointFieldNumber;
const int mujoco_msg::kActFieldNumber;
const int mujoco_msg::kTendFieldNumber;
const int mujoco_msg::kSiteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mujoco_msg::mujoco_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mujoco2py.mujoco_msg)
}

void mujoco_msg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

mujoco_msg::mujoco_msg(const mujoco_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mujoco2py.mujoco_msg)
}

void mujoco_msg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

mujoco_msg::~mujoco_msg() {
  // @@protoc_insertion_point(destructor:mujoco2py.mujoco_msg)
  SharedDtor();
}

void mujoco_msg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void mujoco_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* mujoco_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return mujoco_msg_descriptor_;
}

const mujoco_msg& mujoco_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mujoco2py_2eproto();
  return *default_instance_;
}

mujoco_msg* mujoco_msg::default_instance_ = NULL;

mujoco_msg* mujoco_msg::New(::google::protobuf::Arena* arena) const {
  mujoco_msg* n = new mujoco_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void mujoco_msg::Clear() {
  joint_.Clear();
  act_.Clear();
  tend_.Clear();
  site_.Clear();
}

bool mujoco_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mujoco2py.mujoco_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mujoco2py.mujoco_msg.mj_joint joint = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_joint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_joint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_joint;
        if (input->ExpectTag(18)) goto parse_loop_act;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .mujoco2py.mujoco_msg.mj_act act = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_act:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_act()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_act;
        if (input->ExpectTag(26)) goto parse_loop_tend;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .mujoco2py.mujoco_msg.mj_tend tend = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_tend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tend()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_tend;
        if (input->ExpectTag(34)) goto parse_loop_site;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .mujoco2py.mujoco_msg.mj_site site = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_site:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_site()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_site;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mujoco2py.mujoco_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mujoco2py.mujoco_msg)
  return false;
#undef DO_
}

void mujoco_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mujoco2py.mujoco_msg)
  // repeated .mujoco2py.mujoco_msg.mj_joint joint = 1;
  for (unsigned int i = 0, n = this->joint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->joint(i), output);
  }

  // repeated .mujoco2py.mujoco_msg.mj_act act = 2;
  for (unsigned int i = 0, n = this->act_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act(i), output);
  }

  // repeated .mujoco2py.mujoco_msg.mj_tend tend = 3;
  for (unsigned int i = 0, n = this->tend_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tend(i), output);
  }

  // repeated .mujoco2py.mujoco_msg.mj_site site = 4;
  for (unsigned int i = 0, n = this->site_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->site(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mujoco2py.mujoco_msg)
}

::google::protobuf::uint8* mujoco_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mujoco2py.mujoco_msg)
  // repeated .mujoco2py.mujoco_msg.mj_joint joint = 1;
  for (unsigned int i = 0, n = this->joint_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->joint(i), target);
  }

  // repeated .mujoco2py.mujoco_msg.mj_act act = 2;
  for (unsigned int i = 0, n = this->act_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->act(i), target);
  }

  // repeated .mujoco2py.mujoco_msg.mj_tend tend = 3;
  for (unsigned int i = 0, n = this->tend_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tend(i), target);
  }

  // repeated .mujoco2py.mujoco_msg.mj_site site = 4;
  for (unsigned int i = 0, n = this->site_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->site(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mujoco2py.mujoco_msg)
  return target;
}

int mujoco_msg::ByteSize() const {
  int total_size = 0;

  // repeated .mujoco2py.mujoco_msg.mj_joint joint = 1;
  total_size += 1 * this->joint_size();
  for (int i = 0; i < this->joint_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->joint(i));
  }

  // repeated .mujoco2py.mujoco_msg.mj_act act = 2;
  total_size += 1 * this->act_size();
  for (int i = 0; i < this->act_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act(i));
  }

  // repeated .mujoco2py.mujoco_msg.mj_tend tend = 3;
  total_size += 1 * this->tend_size();
  for (int i = 0; i < this->tend_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tend(i));
  }

  // repeated .mujoco2py.mujoco_msg.mj_site site = 4;
  total_size += 1 * this->site_size();
  for (int i = 0; i < this->site_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->site(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void mujoco_msg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const mujoco_msg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const mujoco_msg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void mujoco_msg::MergeFrom(const mujoco_msg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  joint_.MergeFrom(from.joint_);
  act_.MergeFrom(from.act_);
  tend_.MergeFrom(from.tend_);
  site_.MergeFrom(from.site_);
}

void mujoco_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mujoco_msg::CopyFrom(const mujoco_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mujoco_msg::IsInitialized() const {

  return true;
}

void mujoco_msg::Swap(mujoco_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mujoco_msg::InternalSwap(mujoco_msg* other) {
  joint_.UnsafeArenaSwap(&other->joint_);
  act_.UnsafeArenaSwap(&other->act_);
  tend_.UnsafeArenaSwap(&other->tend_);
  site_.UnsafeArenaSwap(&other->site_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata mujoco_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = mujoco_msg_descriptor_;
  metadata.reflection = mujoco_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// mujoco_msg_mj_joint

// optional string name = 1;
void mujoco_msg_mj_joint::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& mujoco_msg_mj_joint::name() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_joint.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mujoco_msg_mj_joint::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_joint.name)
}
 void mujoco_msg_mj_joint::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mujoco2py.mujoco_msg.mj_joint.name)
}
 void mujoco_msg_mj_joint::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mujoco2py.mujoco_msg.mj_joint.name)
}
 ::std::string* mujoco_msg_mj_joint::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mujoco2py.mujoco_msg.mj_joint.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* mujoco_msg_mj_joint::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mujoco_msg_mj_joint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mujoco2py.mujoco_msg.mj_joint.name)
}

// optional double qpos = 2;
void mujoco_msg_mj_joint::clear_qpos() {
  qpos_ = 0;
}
 double mujoco_msg_mj_joint::qpos() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_joint.qpos)
  return qpos_;
}
 void mujoco_msg_mj_joint::set_qpos(double value) {
  
  qpos_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_joint.qpos)
}

// optional double force = 3;
void mujoco_msg_mj_joint::clear_force() {
  force_ = 0;
}
 double mujoco_msg_mj_joint::force() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_joint.force)
  return force_;
}
 void mujoco_msg_mj_joint::set_force(double value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_joint.force)
}

// -------------------------------------------------------------------

// mujoco_msg_mj_act

// optional double ctrl = 1;
void mujoco_msg_mj_act::clear_ctrl() {
  ctrl_ = 0;
}
 double mujoco_msg_mj_act::ctrl() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_act.ctrl)
  return ctrl_;
}
 void mujoco_msg_mj_act::set_ctrl(double value) {
  
  ctrl_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_act.ctrl)
}

// optional string name = 2;
void mujoco_msg_mj_act::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& mujoco_msg_mj_act::name() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_act.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mujoco_msg_mj_act::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_act.name)
}
 void mujoco_msg_mj_act::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mujoco2py.mujoco_msg.mj_act.name)
}
 void mujoco_msg_mj_act::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mujoco2py.mujoco_msg.mj_act.name)
}
 ::std::string* mujoco_msg_mj_act::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mujoco2py.mujoco_msg.mj_act.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* mujoco_msg_mj_act::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mujoco_msg_mj_act::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mujoco2py.mujoco_msg.mj_act.name)
}

// optional double force = 3;
void mujoco_msg_mj_act::clear_force() {
  force_ = 0;
}
 double mujoco_msg_mj_act::force() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_act.force)
  return force_;
}
 void mujoco_msg_mj_act::set_force(double value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_act.force)
}

// -------------------------------------------------------------------

// mujoco_msg_mj_tend

// optional string name = 1;
void mujoco_msg_mj_tend::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& mujoco_msg_mj_tend::name() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_tend.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mujoco_msg_mj_tend::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_tend.name)
}
 void mujoco_msg_mj_tend::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mujoco2py.mujoco_msg.mj_tend.name)
}
 void mujoco_msg_mj_tend::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mujoco2py.mujoco_msg.mj_tend.name)
}
 ::std::string* mujoco_msg_mj_tend::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mujoco2py.mujoco_msg.mj_tend.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* mujoco_msg_mj_tend::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mujoco_msg_mj_tend::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mujoco2py.mujoco_msg.mj_tend.name)
}

// optional double len = 2;
void mujoco_msg_mj_tend::clear_len() {
  len_ = 0;
}
 double mujoco_msg_mj_tend::len() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_tend.len)
  return len_;
}
 void mujoco_msg_mj_tend::set_len(double value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_tend.len)
}

// optional double len0 = 3;
void mujoco_msg_mj_tend::clear_len0() {
  len0_ = 0;
}
 double mujoco_msg_mj_tend::len0() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_tend.len0)
  return len0_;
}
 void mujoco_msg_mj_tend::set_len0(double value) {
  
  len0_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_tend.len0)
}

// optional double len_dot = 4;
void mujoco_msg_mj_tend::clear_len_dot() {
  len_dot_ = 0;
}
 double mujoco_msg_mj_tend::len_dot() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_tend.len_dot)
  return len_dot_;
}
 void mujoco_msg_mj_tend::set_len_dot(double value) {
  
  len_dot_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_tend.len_dot)
}

// optional double ma = 5;
void mujoco_msg_mj_tend::clear_ma() {
  ma_ = 0;
}
 double mujoco_msg_mj_tend::ma() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_tend.ma)
  return ma_;
}
 void mujoco_msg_mj_tend::set_ma(double value) {
  
  ma_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_tend.ma)
}

// -------------------------------------------------------------------

// mujoco_msg_mj_site

// optional string name = 1;
void mujoco_msg_mj_site::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& mujoco_msg_mj_site::name() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_site.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mujoco_msg_mj_site::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_site.name)
}
 void mujoco_msg_mj_site::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mujoco2py.mujoco_msg.mj_site.name)
}
 void mujoco_msg_mj_site::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mujoco2py.mujoco_msg.mj_site.name)
}
 ::std::string* mujoco_msg_mj_site::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mujoco2py.mujoco_msg.mj_site.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* mujoco_msg_mj_site::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void mujoco_msg_mj_site::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mujoco2py.mujoco_msg.mj_site.name)
}

// optional double x = 2;
void mujoco_msg_mj_site::clear_x() {
  x_ = 0;
}
 double mujoco_msg_mj_site::x() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_site.x)
  return x_;
}
 void mujoco_msg_mj_site::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_site.x)
}

// optional double y = 3;
void mujoco_msg_mj_site::clear_y() {
  y_ = 0;
}
 double mujoco_msg_mj_site::y() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_site.y)
  return y_;
}
 void mujoco_msg_mj_site::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_site.y)
}

// optional double z = 4;
void mujoco_msg_mj_site::clear_z() {
  z_ = 0;
}
 double mujoco_msg_mj_site::z() const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.mj_site.z)
  return z_;
}
 void mujoco_msg_mj_site::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:mujoco2py.mujoco_msg.mj_site.z)
}

// -------------------------------------------------------------------

// mujoco_msg

// repeated .mujoco2py.mujoco_msg.mj_joint joint = 1;
int mujoco_msg::joint_size() const {
  return joint_.size();
}
void mujoco_msg::clear_joint() {
  joint_.Clear();
}
const ::mujoco2py::mujoco_msg_mj_joint& mujoco_msg::joint(int index) const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.joint)
  return joint_.Get(index);
}
::mujoco2py::mujoco_msg_mj_joint* mujoco_msg::mutable_joint(int index) {
  // @@protoc_insertion_point(field_mutable:mujoco2py.mujoco_msg.joint)
  return joint_.Mutable(index);
}
::mujoco2py::mujoco_msg_mj_joint* mujoco_msg::add_joint() {
  // @@protoc_insertion_point(field_add:mujoco2py.mujoco_msg.joint)
  return joint_.Add();
}
::google::protobuf::RepeatedPtrField< ::mujoco2py::mujoco_msg_mj_joint >*
mujoco_msg::mutable_joint() {
  // @@protoc_insertion_point(field_mutable_list:mujoco2py.mujoco_msg.joint)
  return &joint_;
}
const ::google::protobuf::RepeatedPtrField< ::mujoco2py::mujoco_msg_mj_joint >&
mujoco_msg::joint() const {
  // @@protoc_insertion_point(field_list:mujoco2py.mujoco_msg.joint)
  return joint_;
}

// repeated .mujoco2py.mujoco_msg.mj_act act = 2;
int mujoco_msg::act_size() const {
  return act_.size();
}
void mujoco_msg::clear_act() {
  act_.Clear();
}
const ::mujoco2py::mujoco_msg_mj_act& mujoco_msg::act(int index) const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.act)
  return act_.Get(index);
}
::mujoco2py::mujoco_msg_mj_act* mujoco_msg::mutable_act(int index) {
  // @@protoc_insertion_point(field_mutable:mujoco2py.mujoco_msg.act)
  return act_.Mutable(index);
}
::mujoco2py::mujoco_msg_mj_act* mujoco_msg::add_act() {
  // @@protoc_insertion_point(field_add:mujoco2py.mujoco_msg.act)
  return act_.Add();
}
::google::protobuf::RepeatedPtrField< ::mujoco2py::mujoco_msg_mj_act >*
mujoco_msg::mutable_act() {
  // @@protoc_insertion_point(field_mutable_list:mujoco2py.mujoco_msg.act)
  return &act_;
}
const ::google::protobuf::RepeatedPtrField< ::mujoco2py::mujoco_msg_mj_act >&
mujoco_msg::act() const {
  // @@protoc_insertion_point(field_list:mujoco2py.mujoco_msg.act)
  return act_;
}

// repeated .mujoco2py.mujoco_msg.mj_tend tend = 3;
int mujoco_msg::tend_size() const {
  return tend_.size();
}
void mujoco_msg::clear_tend() {
  tend_.Clear();
}
const ::mujoco2py::mujoco_msg_mj_tend& mujoco_msg::tend(int index) const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.tend)
  return tend_.Get(index);
}
::mujoco2py::mujoco_msg_mj_tend* mujoco_msg::mutable_tend(int index) {
  // @@protoc_insertion_point(field_mutable:mujoco2py.mujoco_msg.tend)
  return tend_.Mutable(index);
}
::mujoco2py::mujoco_msg_mj_tend* mujoco_msg::add_tend() {
  // @@protoc_insertion_point(field_add:mujoco2py.mujoco_msg.tend)
  return tend_.Add();
}
::google::protobuf::RepeatedPtrField< ::mujoco2py::mujoco_msg_mj_tend >*
mujoco_msg::mutable_tend() {
  // @@protoc_insertion_point(field_mutable_list:mujoco2py.mujoco_msg.tend)
  return &tend_;
}
const ::google::protobuf::RepeatedPtrField< ::mujoco2py::mujoco_msg_mj_tend >&
mujoco_msg::tend() const {
  // @@protoc_insertion_point(field_list:mujoco2py.mujoco_msg.tend)
  return tend_;
}

// repeated .mujoco2py.mujoco_msg.mj_site site = 4;
int mujoco_msg::site_size() const {
  return site_.size();
}
void mujoco_msg::clear_site() {
  site_.Clear();
}
const ::mujoco2py::mujoco_msg_mj_site& mujoco_msg::site(int index) const {
  // @@protoc_insertion_point(field_get:mujoco2py.mujoco_msg.site)
  return site_.Get(index);
}
::mujoco2py::mujoco_msg_mj_site* mujoco_msg::mutable_site(int index) {
  // @@protoc_insertion_point(field_mutable:mujoco2py.mujoco_msg.site)
  return site_.Mutable(index);
}
::mujoco2py::mujoco_msg_mj_site* mujoco_msg::add_site() {
  // @@protoc_insertion_point(field_add:mujoco2py.mujoco_msg.site)
  return site_.Add();
}
::google::protobuf::RepeatedPtrField< ::mujoco2py::mujoco_msg_mj_site >*
mujoco_msg::mutable_site() {
  // @@protoc_insertion_point(field_mutable_list:mujoco2py.mujoco_msg.site)
  return &site_;
}
const ::google::protobuf::RepeatedPtrField< ::mujoco2py::mujoco_msg_mj_site >&
mujoco_msg::site() const {
  // @@protoc_insertion_point(field_list:mujoco2py.mujoco_msg.site)
  return site_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int general_msg::kInstructionFieldNumber;
const int general_msg::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

general_msg::general_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mujoco2py.general_msg)
}

void general_msg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

general_msg::general_msg(const general_msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mujoco2py.general_msg)
}

void general_msg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  instruction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

general_msg::~general_msg() {
  // @@protoc_insertion_point(destructor:mujoco2py.general_msg)
  SharedDtor();
}

void general_msg::SharedDtor() {
  instruction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void general_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* general_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return general_msg_descriptor_;
}

const general_msg& general_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mujoco2py_2eproto();
  return *default_instance_;
}

general_msg* general_msg::default_instance_ = NULL;

general_msg* general_msg::New(::google::protobuf::Arena* arena) const {
  general_msg* n = new general_msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void general_msg::Clear() {
  instruction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.Clear();
}

bool general_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mujoco2py.general_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string instruction = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instruction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instruction().data(), this->instruction().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mujoco2py.general_msg.instruction"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // repeated double value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_value())));
        } else if (tag == 17) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mujoco2py.general_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mujoco2py.general_msg)
  return false;
#undef DO_
}

void general_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mujoco2py.general_msg)
  // optional string instruction = 1;
  if (this->instruction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instruction().data(), this->instruction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.general_msg.instruction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->instruction(), output);
  }

  // repeated double value = 2;
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_value_cached_byte_size_);
  }
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mujoco2py.general_msg)
}

::google::protobuf::uint8* general_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mujoco2py.general_msg)
  // optional string instruction = 1;
  if (this->instruction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instruction().data(), this->instruction().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mujoco2py.general_msg.instruction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->instruction(), target);
  }

  // repeated double value = 2;
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _value_cached_byte_size_, target);
  }
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->value(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mujoco2py.general_msg)
  return target;
}

int general_msg::ByteSize() const {
  int total_size = 0;

  // optional string instruction = 1;
  if (this->instruction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instruction());
  }

  // repeated double value = 2;
  {
    int data_size = 0;
    data_size = 8 * this->value_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void general_msg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const general_msg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const general_msg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void general_msg::MergeFrom(const general_msg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  value_.MergeFrom(from.value_);
  if (from.instruction().size() > 0) {

    instruction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instruction_);
  }
}

void general_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void general_msg::CopyFrom(const general_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool general_msg::IsInitialized() const {

  return true;
}

void general_msg::Swap(general_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void general_msg::InternalSwap(general_msg* other) {
  instruction_.Swap(&other->instruction_);
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata general_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = general_msg_descriptor_;
  metadata.reflection = general_msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// general_msg

// optional string instruction = 1;
void general_msg::clear_instruction() {
  instruction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& general_msg::instruction() const {
  // @@protoc_insertion_point(field_get:mujoco2py.general_msg.instruction)
  return instruction_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void general_msg::set_instruction(const ::std::string& value) {
  
  instruction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mujoco2py.general_msg.instruction)
}
 void general_msg::set_instruction(const char* value) {
  
  instruction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mujoco2py.general_msg.instruction)
}
 void general_msg::set_instruction(const char* value, size_t size) {
  
  instruction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mujoco2py.general_msg.instruction)
}
 ::std::string* general_msg::mutable_instruction() {
  
  // @@protoc_insertion_point(field_mutable:mujoco2py.general_msg.instruction)
  return instruction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* general_msg::release_instruction() {
  
  return instruction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void general_msg::set_allocated_instruction(::std::string* instruction) {
  if (instruction != NULL) {
    
  } else {
    
  }
  instruction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instruction);
  // @@protoc_insertion_point(field_set_allocated:mujoco2py.general_msg.instruction)
}

// repeated double value = 2;
int general_msg::value_size() const {
  return value_.size();
}
void general_msg::clear_value() {
  value_.Clear();
}
 double general_msg::value(int index) const {
  // @@protoc_insertion_point(field_get:mujoco2py.general_msg.value)
  return value_.Get(index);
}
 void general_msg::set_value(int index, double value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:mujoco2py.general_msg.value)
}
 void general_msg::add_value(double value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:mujoco2py.general_msg.value)
}
 const ::google::protobuf::RepeatedField< double >&
general_msg::value() const {
  // @@protoc_insertion_point(field_list:mujoco2py.general_msg.value)
  return value_;
}
 ::google::protobuf::RepeatedField< double >*
general_msg::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:mujoco2py.general_msg.value)
  return &value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mujoco2py

// @@protoc_insertion_point(global_scope)
